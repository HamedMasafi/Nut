name: CI Build

on:
  push:
    branches-ignore:
      - "releases/**"
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        qt_version: [5.12.11, 5.15.2, 6.2.0]
        platform: [ubuntu-20.04, windows-latest, macos-latest]
        include:
          - qt_version: 6.2.0
            additional_arguments: -D QT_DEFAULT_MAJOR_VERSION=6
          - platform: ubuntu-20.04
            make: make
            #CXXFLAGS: -Wall -Wextra
            MAKEFLAGS: -j2
            run_tests: true
          - platform: macos-latest
            make: make
            #CXXFLAGS: -Wall -Wextra
            MAKEFLAGS: -j3
            run_tests: false
          - platform: windows-latest
            make: nmake
            QMAKE_MSC_VER: 16.11.31911.196
            cmake_params: -D CMAKE_CXX_FLAGS_DEBUG="/g"
            run_tests: false
          - platform: ubuntu-latest
            qt_version: 5.15.2
            tests: [sqlite, mysql, posgtresql]

    runs-on: ${{ matrix.platform }}
    env:
      CXXFLAGS: ${{ matrix.CXXFLAGS }}
      MAKEFLAGS: ${{ matrix.MAKEFLAGS }}
      QMAKE_MSC_VER: ${{ matrix.QMAKE_MSC_VER }}
      CMAKE_PREFIX_PATH: $Qt6_DIR/lib/cmake
      CMAKE_CXX_FLAGS_DEBUG: ${{ matrix.CMAKE_CXX_FLAGS_DEBUG }}
      
    steps:
      - name: Clone repo
        uses: actions/checkout@v2.3.4
        with:
          submodules: recursive
          
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.14.0
        with:
          version: ${{ matrix.qt_version }}

      - name: Setup MSVC environment for QMake
        uses: ilammy/msvc-dev-cmd@v1
        with:
          uwp: false
          
      - name: Build with QMake
        run: |
          mkdir build-qmake
          cd build-qmake
          qmake ../nut.pro
          ${{ matrix.make }} qmake_all
          ${{ matrix.make }}

      - name: Build with CMake
        if: startsWith(matrix.qt_version, '6.')
        run: |
          mkdir build-cmake
          cd build-cmake
          cmake .. ${{ matrix.additional_arguments }}  ${{ matrix.cmake_params }}
          cmake --build .
  
      - name: Run tests with sqlite
        if: contains(matrix.tests, 'sqlite')
        run: |
          rm tests/auto/common/test_params.h
          cp tests/auto/common/test_params_sqlite.h tests/auto/common/test_params.h 
          cd build-qmake
          ${{ matrix.make }} all
          ${{ matrix.make }} run-tests
          
      - name: Run tests with mysql
        if: contains(matrix.tests, 'mysql')
        run: |
          rm tests/auto/common/test_params.h
          cp tests/auto/common/test_params_mysql.h tests/auto/common/test_params.h 
          sudo systemctl start mysql.service
          cd build-qmake
          ${{ matrix.make }} all
          ${{ matrix.make }} run-tests
          
      - name: Run tests with posgtresql
        if: contains(matrix.tests, 'posgtresql')
        run: |
          rm tests/auto/common/test_params.h
          cp tests/auto/common/test_params_postgresql.h tests/auto/common/test_params.h 
          cd build-qmake
          ${{ matrix.make }} all
          ${{ matrix.make }} run-tests
